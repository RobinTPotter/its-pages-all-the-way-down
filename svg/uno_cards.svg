<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 744.0945 1052.3622">
    <defs>

        <pattern id="p_circles" x="5" y="0" width="50" height="50" patternUnits="userSpaceOnUse"
            patternTransform="rotate(45 0 0) scale(2)">
            <circle cx="20" cy="20" r="16" style="fill:none;stroke:#000;stroke-width:2" />
        </pattern>
        
        <pattern id="p_squares" x="5" y="0" width="50" height="50" patternUnits="userSpaceOnUse" patternTransform="rotate(43 0 0) scale(2)">
            <rect x="0" y="0" width="30" height="30" style="fill:none;stroke:#000;stroke-width:2" />
        </pattern>
        
        <pattern id="p_stars" x="0" y="0" width="110" height="110" patternUnits="userSpaceOnUse" patternTransform="rotate(45 0 0)">
            <g transform="translate(20 0) rotate(45 13 24) scale(2.4)">
                <path d="M 29 13 L 19 18 L 18 28 L 11 21 L 0 22 L 5 13 L 0 4 L 11 5 L 18 -2 L 19 8 L 29 13" style="fill:none;stroke:#000;stroke-width:2" />
            </g>
        </pattern>
        
        <pattern id="p_triangles" x="0" y="0" width="100" height="100" patternUnits="userSpaceOnUse" patternTransform="rotate(45 0 0)">
            <g transform="rotate(45 8 22) scale(2.1)"><path d="M 0 0 L 30 0 L 15 26 L 0 0" style="fill:none;stroke:#000;stroke-width:2" /></g>
        </pattern>

        <path id="cross" d="M -20 -20 L 0 0 M 20 -20 L -20 20" style="fill:none;stroke:#000;stroke-width:5"></path>

    </defs>



    <g id="card">
        <g id="background">
            <rect id="main_d1" x="0" y="0" width="960" height="1370" style="fill:none;stroke:#000;stroke-width:3"/>
            <rect id="main_d2" x="20" y="20" width="960" height="1370" style="fill:none;stroke:#000;stroke-width:3"/>
            <rect id="main_background" x="40" y="40" width="900" height="1310" style="fill:#000;stroke:#000;stroke-width:5"/>
        </g>
        <g>
            <g transform="translate(-10 -10) rotate(0)"><use xlink:href="#cross" x="0" y="0"/></g>
            <g transform="translate(1000 1420) rotate(180)"><use xlink:href="#cross" x="0" y="0"/></g>
            <g transform="translate(1000 -10) rotate(90)"><use xlink:href="#cross" x="0" y="0"/></g>
            <g transform="translate(-10 1420) rotate(270)"><use xlink:href="#cross" x="0" y="0"/></g>
        </g>
        <g id="values">
            <g transform="translate(120 120)"> <!-- (120 120) -->
                <g id="minor_digit">
                    <text id="t1" class="value_top_left" x="10" y="10" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <text id="t2" class="value_top_left" x="0" y="0" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <g transform="translate(-75 -60)">
                        <g transform="translate(10 10)scale(0.15)"> <!-- (10 10) -->
                            <path id="s1" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:10" />
                        </g>
                        <g transform="translate(0 0)scale(0.15)"> <!-- (0 0) -->
                            <path id="s2" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:10" />
                        </g>
                    </g>
                </g>
            </g>
            <g transform="translate(840 120)"> <!-- (120 120) -->
                <g id="minor_digit">
                    <text id="t3" class="value_top_left" x="10" y="10" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <text id="t4" class="value_top_left" x="0" y="0" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <g transform="translate(-75 -60)">
                        <g transform="translate(10 10)scale(0.15)">
                            <path id="s3" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:10" />
                        </g>
                        <g transform="translate(0 0)scale(0.15)"> 
                            <path id="s4" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:10" />
                        </g>
                    </g>
                </g>
            </g>
            <g transform="translate(120 1250)">
                <g id="minor_digit">
                    <text id="t5"  class="value_top_left" x="10" y="10" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <text id="t6" class="value_top_left" x="0" y="0" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <g transform="translate(-75 -60)">
                        <g transform="translate(10 10)scale(0.15)">
                            <path id="s5" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:10" />
                        </g>
                        <g transform="translate(0 0)scale(0.15)">
                            <path id="s6" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:10" />
                        </g>
                    </g>
                 </g>
            </g>
            <g transform="translate(840 1250)">
                <g id="minor_digit">
                    <text id="t7" class="value_top_left" x="10" y="10" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <text id="t8" class="value_top_left" x="0" y="0" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:2" text-anchor="middle">H</text>
                    <g transform="translate(-75 -60)">
                        <g transform="translate(10 10)scale(0.15)">
                            <path id="s7" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#000;stroke:#000;stroke-width:10" />
                        </g>
                        <g transform="translate(0 0)scale(0.15)">
                            <path id="s8" class="value_top_left" style="dominant-baseline:middle;font-family:sans-serif;font-size:100;fill:#fff;stroke:#000;stroke-width:10" />
                        </g> </g>
                 </g>
            </g>
            <g id="main_value" transform="translate(500 500)">
                <g id="main_digit">
                    <g class="text">
                        <text id="value_main_shadow" x="15" y="15" style="dominant-baseline:middle;font-family:impact;font-size:900;fill:#000;stroke:#000;stroke-width:10;letter-spacing:-30" text-anchor="middle">H</text>
                        <text id="value_main" x="0" y="0" style="dominant-baseline:middle;font-family:impact;font-size:900;fill:#fff;stroke:#000;stroke-width:10;letter-spacing:-30" text-anchor="middle">H</text>
                        <g transform="translate(-500 -380)">
                            <g transform="translate(15 15)"><path id="s_value_main_shadow" x="15" y="15" style="dominant-baseline:middle;font-family:impact;font-size:900;fill:#000;stroke:#000;stroke-width:10;letter-spacing:-30" /></g>
                            <path id="s_value_main" x="0" y="0" style="dominant-baseline:middle;font-family:impact;font-size:900;fill:#fff;stroke:#000;stroke-width:10;letter-spacing:-30" />
                            <g id="barre" style="visibility:hidden">
                                <rect x="310" y="780" width="400" height="60" style="fill:#000;stroke:#000;stroke-width:10;"></rect>
                                <rect x="300" y="770" width="400" height="60" style="fill:#fff;stroke:#000;stroke-width:10;"></rect>                            
                            </g>
                        </g>
                    </g>
                </g>
            </g>
        </g>
    </g>

    <g id="main_panel" transform="scale(1.0)">
        <g id="deck" transform="scale(0.25) translate(100 141)"></g>
    </g>

    <script id="main_script" type="text/javascript"><![CDATA[

        //array of patterns
        var p = ['p_circles','p_squares','p_triangles','p_stars']
        var pp = 0

        function twitch() {
            pp++
            if (pp>=p.length) pp=0
            document.getElementById('main_background').style.fill = 'url(#' + p[pp] + ')'
            setTimeout(twitch,1000)
        }

        //change pattern background of main card
        function suit(pattern) {
            if (pattern) document.getElementById('main_background').style.fill = 'url(#'+pattern+')'
            else document.getElementById('main_background').style.fill = 'none'
        }

        //change face value of main card
        function value(val) {

            if (val=='M' || val=='R') {
                var ids = [ 's_value_main_shadow', 's_value_main', 's1', 's2', 's3', 's4', 's5', 's6', 's7', 's8' ]

                if (val=='M') data = "m 395.93093,397.32628 c -31.2681,-41.54588 -18.19945,-110.78495 20.04882,-149.03283 38.24826,-38.24827 105.61896,-51.3169 149.03283,-20.04882 z M 625.22708,288.9837 C 652.25091,330.33573 642.7817,399.08865 604.77832,437.09202 566.77531,475.09541 498.956,487.36657 456.67038,457.5404 Z M 357.23089,495.95994 c 87.53186,87.53187 227.08444,89.8975 311.69844,5.28308 84.61438,-84.61439 82.24917,-224.16654 -5.2831,-311.69841 l -0.11907,-0.11907 c -87.53187,-87.53227 -227.08402,-89.897506 -311.69842,-5.28308 -84.61401,84.61438 -82.24879,224.16656 5.28308,311.69841 z"
                if (val=='R') data = "m 546.55515,558.6015 c -73.68388,0 -133.41657,-57.74128 -133.41657,-128.96934 0,-71.22769 59.73269,-128.9694 133.41657,-128.9694 l 0,-87.69879 c -123.78873,0 -224.13966,97.00542 -224.13966,216.66819 0,119.66273 100.35093,216.66854 224.13966,216.66854 l 0,57.193 79.11769,-101.0424 -79.11769,-101.04241 z M 474.2032,126.78383 c 73.68388,0 133.41659,57.74128 133.41659,128.96937 0,71.22769 -59.73271,128.96935 -133.41659,128.96935 l 0,87.69883 c 123.78875,0 224.13966,-97.00581 224.13966,-216.66818 0,-119.66276 -100.35091,-216.668561 -224.13966,-216.668561 l 0,-57.19301 -79.11769,101.042415 79.11769,101.042396 z"

                for (var ii=0;ii<ids.length;ii++) {
                    document.getElementById(ids[ii]).setAttribute('d',data)
                }

                var ids = [ 'value_main_shadow', 'value_main', 't1', 't2', 't3', 't4', 't5', 't6', 't7', 't8' ]
                for (var ii=0;ii<ids.length;ii++) {
                    document.getElementById(ids[ii]).textContent = ''
                }

            } else {
                var ids = [ 's_value_main_shadow', 's_value_main', 's1', 's2', 's3', 's4', 's5', 's6', 's7', 's8' ]

                data=''

                for (var ii=0;ii<ids.length;ii++) {
                    document.getElementById(ids[ii]).setAttribute('d',data)
                }

                var ids = [ 'value_main_shadow', 'value_main', 't1', 't2', 't3', 't4', 't5', 't6', 't7', 't8' ]
                for (var ii=0;ii<ids.length;ii++) {
                    document.getElementById(ids[ii]).textContent = val
                    
                    
                    if (val=='?') document.getElementById(ids[ii]).style.fontFamily = 'sans-serif'
                    else document.getElementById(ids[ii]).style.fontFamily = 'impact'
                }
            }
            
            if (val=='6' || val=='9') document.getElementById('barre').style.visibility = 'visible'
            else document.getElementById('barre').style.visibility = 'hidden'

            font = 900
            trns = 'translate(500 720)'
            //trns = 'translate(500 1000)'

            if (val.substr(0,1)=='+') {
                font = 750
                trns = 'translate(450 720)'
                //trns = 'translate(450 1000)'
            }

            if (val=='R' || val=='M') {
                trns = 'translate(500 720)'            
            }
            
            if (val == '+4' || val == '?' ) suit()

            document.getElementById('value_main_shadow').style.fontSize = font
            document.getElementById('value_main').style.fontSize = font
            
            //changed to "setattribute"
            document.getElementById('main_value').setAttribute('transform', trns)

        }

        ///twitch();

        var pos = 0
        var spacing = 1.25
        var num_cards = 3
        var cards_per_page = num_cards * num_cards
        
        var deck_offset_x = 100
        var deck_offset_y = 141
        var deck_scale = 1 / (num_cards+1)
        
        var deck = document.getElementById('deck')
        deck.setAttribute('transform','scale('+deck_scale+') translate('+deck_offset_x+' '+deck_offset_y+')')
        
        var main_panel = document.getElementById('main_panel')
        main_panel.setAttribute('transform','scale(.81)')
        
        
        
        
        //main card object (deleted at end of script) 

        //change main card and clone and put in deck group
        function createcard(pattern, val) {
            suit(pattern)
            value(val)
            var card = document.getElementById('card')
            card.style.visibility = 'visible'
            var hello = card.cloneNode(true)

            hello.id = pattern+'_'+val+'_'+(new Date).getTime()
            hello.setAttribute('transform','translate('+(spacing*1000*(pos % num_cards))+' '+(spacing*1410*Math.floor(pos/num_cards))+')');
            console.log(hello)
            var deck = document.getElementById('deck')
            deck.appendChild(hello)
            card.style.visibility = 'hidden'
            pos++
        }

        //make a start path data
        function star(points, inner_radius, outer, offsetx, offsety) {
            var out = '';
            var first_point = true;
            for (var p=0;p<=points;p++) {

                if (first_point) { out = out + 'M '; first_point = false }
                else { out = out + 'L '; }

                out = out + Math.round(offsetx+outer*Math.cos((p)*2*Math.PI/points)) + ' ';
                out = out + Math.round(offsety+outer*Math.sin((p)*2*Math.PI/points)) + ' ';
                if (p!=points) {
                    out = out + 'L ';
                    out = out + Math.round(offsetx+inner_radius*Math.cos((p+0.5)*2*Math.PI/points)) + ' ';
                    out = out + Math.round(offsety+inner_radius*Math.sin((p+0.5)*2*Math.PI/points)) + ' ';
                }
            }
            return out;
        }

        //create list of card values

        var v = []

        //all numbers and extra each suit
        for (var nn=0;nn<10;nn++) v.push(String(nn))
        v.push('M')
        v.push('+2')
        v.push('R')

        //all numbers except zero and extra each suit
        for (var nn=1;nn<10;nn++) v.push(String(nn))
        v.push('M')
        v.push('+2')
        v.push('R')

        //four lots of these
        v.push('?')
        v.push('+4')

        // page number unless comes from parameter
        page_number=0

        //count of cards printed
        card_count=0

        //get the page number from parameter
        if (window.location.search) {
            re = /\?page=(\d+)/;
            page_number =Number( window.location.search.match(re)[1] )
            //alert(page_number)
        } else {
            // no page number, run test page        
                v = []

                //all numbers and extra each suit
                //for (var nn=0;nn<1;nn++) v.push(String(nn))
                //v.push('M')
                //v.push('+2')
                v.push('R')
                //v.push('?')
                //v.push('+4')
                v.push('1')
                v.push('9')

        
        }

        //print cards only to fill page
        for (var ss=0;ss<p.length;ss++) {
            for (var vv=0;vv<v.length;vv++) {
                if (card_count>=page_number*cards_per_page && card_count<(page_number+1)*cards_per_page) createcard(p[ss], v[vv])
                card_count++
            }
        }

        document.getElementsByTagName('svg')[0].removeChild(document.getElementById('card'))
        console.log(document.getElementsByTagName('svg')[0])

    ]]>
    </script>
    <script type="text/javascript">
    <![CDATA[
        document.getElementsByTagName('svg')[0].removeChild(document.getElementById('main_script'))
    ]]>
    </script>
    
    
</svg>
